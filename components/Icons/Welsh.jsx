import { motion } from 'framer-motion'
import { useRouter } from 'next/router'
import React, { useState } from 'react'
import styles from '../../styles/Home.module.css'

const Welsh = ({}) => {
  const [isOpen, setIsOpen] = useState(false)
  const [hovered, setHovered] = useState(false)

  const router = useRouter()
  const variants = {
    open: { width: '100vw', height: '100vh', borderRadius: '0%', top: 0, left: 0, zIndex: 2 },
    closed: { width: '75px', height: '75px', borderRadius: '25px' },
    hover: { scale: 1.4, transition: { duration: 0.2 } }
  }

  const handleOnClick = () => {
    setIsOpen(!isOpen)
    setTimeout(() => router.push('/test'), 1000)
  }

  return (
    <div className={styles.iconContainer}>
      <motion.button
        whileHover="hover"
        variants={variants}
        className={styles.icon}
        style={{ background: 'linear-gradient(0deg, #3ACC55 50%, #F0F0F0 50%)' }}
        onClick={handleOnClick}
        onMouseEnter={() => setHovered(true)}
        onMouseLeave={() => setHovered(false)}
      >
        <svg width="75px" height="75px" viewBox="0 0 21 15" version="1.1" xmlns="http://www.w3.org/2000/svg">
          <defs>
            <linearGradient x1="50%" y1="0%" x2="50%" y2="100%" id="linearGradient-3-wales">
              <stop stopColor="#E91C44" offset="0%"></stop>
              <stop stopColor="#D20F35" offset="100%"></stop>
            </linearGradient>
          </defs>
          <g id="Symbols" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
            <g id="GB-WLS">
              <motion.path
                d={
                  hovered
                    ? 'M10.0668 12.3842C9.82999 12.0891 9.23882 11.5138 8.75303 11.1058C7.31368 9.89688 7.11778 9.72192 6.53338 9.12341C5.45599 8.02001 4.99844 6.91147 5 5.40836C5.00077 4.67461 5.04574 4.39192 5.23049 3.9594C5.54393 3.22561 6.00565 2.68035 6.59595 2.34686C7.01405 2.11067 7.22025 2.00573 7.91844 2.00144C8.64879 1.99695 8.80254 2.09166 9.23216 2.35417C9.75508 2.67368 10.2933 3.35654 10.4046 3.84161L10.4733 4.14121L10.6428 3.72859C11.6004 1.39693 14.6577 1.43182 15.7217 3.78655C16.0592 4.53353 16.0963 6.12854 15.797 7.027C15.4066 8.199 14.6733 9.09252 12.9781 10.4617C11.8664 11.3597 10.6082 12.7183 10.5206 12.9092C10.419 13.1307 10.5158 12.9439 10.0668 12.3842Z'
                    : 'M8.06628418,11.395874 L9.30249023,11.1851807 L8.34521484,10.7337646 L9,10.3668213 C9,10.3668213 10.1035156,11.2986247 10.1035156,11 C10.1035156,10.6791329 11.1416714,10.8194553 11.1000977,10.3668213 C11.0432104,9.74746167 9.95119584,10.3214459 9.75622559,9.54724121 C9.64733416,9.11484575 9.30249023,9.16992188 9.30249023,9.16992188 L8.20288086,9.54724121 L7.65527344,10.3668213 L7.38330078,9.54724121 C7.38330078,9.54724121 6.74137875,10.0689534 6.52783203,10.3668213 C6.29960629,10.6851643 6.0579834,11.395874 6.0579834,11.395874 L7.17956543,11.864624 L5.54394531,11.576416 L4.35046387,11.864624 L3.61779785,12.0683594 L3.93957519,11.7303467 L3.28332519,11.395874 L3.93957519,11 L3.61779785,10.7337646 L5.0357666,11 C5.0357666,11 5.55399118,10.9479157 5.74987793,10.7337646 C5.99694366,10.4636628 6.19091797,9.54724121 6.19091797,9.54724121 L5.54394531,9.16992188 L5.0357666,10.0913086 C5.0357666,10.0913086 4.68520285,9.21964588 4.35046387,8.73120117 C4.10105571,8.36726958 3.2833252,7.53417969 3.2833252,7.53417969 L2.22875977,8.08874512 L2.81677246,6.91625977 C2.81677246,6.91625977 3.2833252,6.50878906 2.98693848,6.09094238 C2.69055176,5.6730957 2.44165039,4.73779297 2.44165039,4.73779297 C2.44165039,4.73779297 3.05961179,5.80919661 3.2833252,5.72631836 C3.5998317,5.60906341 2.88877055,4.63166458 3.2833252,4.4576416 C3.56723947,4.33241786 3.61779785,5.578125 3.61779785,5.578125 L3.9395752,4.96691895 L3.9395752,5.72631836 C3.9395752,5.72631836 3.7527269,6.63385776 4.0703125,7.1730957 C4.3878981,7.71233364 5.33093262,8.08874512 5.33093262,8.08874512 C5.33093262,8.08874512 5.08564956,7.54767013 5.33093262,6.50878906 C5.49693703,5.80568773 6.08746111,4.60596359 6.36462402,4.22155762 C6.5110631,4.01845664 5.1932373,4.96691895 5.1932373,4.96691895 L5.1932373,4.22155762 L3.9395752,4.09301758 L3.61779785,4.4576416 L2.81677246,3.14379883 L3.81347656,3.64501953 L5.33093262,3.64501953 L5.0357666,3.28271484 L3.81347656,3.28271484 C3.81347656,3.28271484 4.0703125,2.75366211 5.33093262,2.75366211 L5.92700195,2.34863281 C5.92700195,2.34863281 6.74200512,2.37187253 7.20062048,2.38933596 C7.60915183,2.40489226 8.34521484,1.88671875 8.34521484,1.88671875 L8.55236816,2.38933593 L8.06628418,3.14379883 L8.55236816,3.64501953 L8.34521484,3.95410156 L8.70166016,4.4576416 L8.06628418,4.4576416 L8.55236816,5.24121094 L8.06628418,4.96691895 L8.34521484,5.72631836 L8.06628418,6.50878906 L9.30249023,6.09094238 C9.30249023,6.09094238 9.30249023,4.96691895 9.75622559,4.4576416 C11.1418349,3.03637796 13.4012451,1.88671875 13.4012451,1.88671875 C13.4012451,1.88671875 13.2815517,2.91907328 13.6158447,3 C14.1012173,3.11750054 16.2209473,2.14953613 16.2209473,2.14953613 C16.2209473,2.14953613 14.9473885,3.52037394 15.2081299,3.64501953 C15.34859,3.7121655 15.5820312,3.95410156 15.5820312,3.95410156 C15.5820312,3.95410156 14.4812168,4.85394638 14.2972412,5.24121094 C14.1132657,5.6284755 14.5668945,6.09094238 14.5668945,6.09094238 C14.5668945,6.09094238 13.6158447,6.09094238 13.1419678,6.50878906 C14.5668945,6.50878906 15.732451,7.18421295 16.4223633,6.68591309 C16.8846879,6.35199196 14.7669351,6.56041624 15.0449219,5.72631836 C15.1480802,5.41679225 15.4176025,5.05848575 16.034668,4.96691895 C16.6517334,4.87535214 16.8703613,5.24121094 16.8703613,5.24121094 L17.2025146,4.73779297 L16.2209473,4.73779297 L18,3 L18.2316895,5.24121094 L17.6297607,4.73779297 C17.6297607,4.73779297 17.3599854,5.578125 17.3599854,5.578125 C18,7.53417969 15.0449219,7.94995117 15.0449219,7.94995117 L16.8703613,9.16992188 L16.2209473,9.35632324 L16.034668,11.1851807 L16.8703613,11.864624 L15.7718506,11.576416 L13.6158447,12.0683594 L14.0447998,11.395874 L13.1419678,11.576416 L13.7449951,11 L13.1419678,10.7337646 L13.9128418,10.5196533 L14.8840332,11.1851807 C14.8840332,11.1851807 15.3644104,10.5632969 15.4176025,10.2325439 C15.4724426,9.89154393 15.2081299,9.16992188 15.2081299,9.16992188 C15.2081299,9.16992188 13.7774063,9.13987452 13.2727051,9.01477051 C12.7680039,8.8896665 12.4764404,8.49279785 12.4764404,8.49279785 L11.9034424,9.16992188 C11.9034424,9.16992188 13.9000942,9.91811277 13.4012451,10.2325439 C13.2854013,10.3055618 12.7137451,10.0913086 12.7137451,10.0913086 C12.7137451,10.0913086 11.7298542,11.2417831 11.1000977,11.395874 C10.8135113,11.4659969 11.9034424,11.864624 11.9034424,11.864624 C11.9034424,11.864624 10.9727612,11.7172009 10.5,11.576416 C10.0049471,11.4289929 8.55236816,11.864624 8.55236816,11.864624 L8.06628418,11.395874 Z M16.0865479,6.0526123 C16.224619,6.0526123 16.3365479,5.94068349 16.3365479,5.8026123 C16.3365479,5.66454112 16.224619,5.5526123 16.0865479,5.5526123 C15.9484767,5.5526123 15.8365479,5.66454112 15.8365479,5.8026123 C15.8365479,5.94068349 15.9484767,6.0526123 16.0865479,6.0526123 Z'
                }
                animate={hovered ? { scale: [1, 1.3, 1] } : { scale: 1 }}
                transition={hovered ? { repeat: Infinity, duration: 1.5 } : {}}
                fill="url(#linearGradient-3-wales)"
              ></motion.path>
            </g>
          </g>
        </svg>
      </motion.button>
      <motion.div
        className={styles.backdrop}
        style={{ background: 'linear-gradient(0deg, #3ACC55 50%, #F0F0F0 50%)' }}
        initial="closed"
        animate={isOpen ? 'open' : 'closed'}
        variants={variants}
        transition={{ duration: 0.3 }}
      ></motion.div>
    </div>
  )
}

export { Welsh }
